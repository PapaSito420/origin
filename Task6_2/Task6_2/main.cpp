//Задача 2. Фигуры. Стороны и углы
//В этом задании вы усложните иерархию классов для усложнённой предметной области.
//
//У вас появляется информация о длине сторон и углах ваших фигур, а также несколько более конкретных фигур. Теперь в треугольнике вы должны хранить информацию о длине всех его трёх сторон (a, b, c) и значениях его трёх углов (A, B, C). В четырёхугольнике вы храните информацию о длине его четырёх сторон (a, b, c, d) и значениях его четырёх углов (A, B, C, D).
//
//Также у вас появляются более конкретные фигуры:
//
//прямоугольный треугольник (угол C всегда равен 90);
//равнобедренный треугольник (стороны a и c равны, углы A и C равны);
//равносторонний треугольник (все стороны равны, все углы равны 60);
//прямоугольник (стороны a,c и b,d попарно равны, все углы равны 90);
//квадрат (все стороны равны, все углы равны 90);
//параллелограмм (стороны a,c и b,d попарно равны, углы A,C и B,D попарно равны);
//ромб (все стороны равны, углы A,C и B,D попарно равны).
//Вы должны иметь возможность узнать у каждой фигуры длины её сторон и значения её углов, но извне вы не должны быть способны изменить длины сторон и углы.
//
//Не должно быть возможности создать фигуры, не удовлетворяющие перечисленным условиям. Например, нельзя создать квадрат с разными углами. Геометрические соотношения проверять не нужно. Например, сумма углов в треугольнике может быть не равна 180.
//
//Задача: спроектировать и реализовать классы, описывающие предметную область. Продемонстрируйте их работу: создайте по одному экземпляру каждой фигуры и выведите на экран информацию о длинах её сторон и величине её углов. Значения используйте произвольные.
//
//Инициализацию длин сторон и величин углов нужно выполнить с помощью вызова базовых конструкторов.
//
//Для вывода информации о фигуре создайте функцию print_info, которая будет принимать в качестве аргумента указатель на базовый класс фигуры.
//
//Пример работы программы
//Консоль
//Треугольник:
//Стороны: a=10 b=20 c=30
//Углы: A=50 B=60 C=70
//
//Прямоугольный треугольник:
//Стороны: a=10 b=20 c=30
//Углы: A=50 B=60 C=90
//
//Равнобедренный треугольник:
//Стороны: a=10 b=20 c=10
//Углы: A=50 B=60 C=50
//
//Равносторонний треугольник:
//Стороны: a=30 b=30 c=30
//Углы: A=60 B=60 C=60
//
//Четырёхугольник:
//Стороны: a=10 b=20 c=30 d=40
//Углы: A=50 B=60 C=70 D=80
//
//Прямоугольник:
//Стороны: a=10 b=20 c=10 d=20
//Углы: A=90 B=90 C=90 D=90
//
//Квадрат:
//Стороны: a=20 b=20 c=20 d=20
//Углы: A=90 B=90 C=90 D=90
//
//Параллелограмм:
//Стороны: a=20 b=30 c=20 d=30
//Углы: A=30 B=40 C=30 D=40
//
//Ромб:
//Стороны: a=30 b=30 c=30 d=30
//Углы: A=30 B=40 C=30 D=40

#include <iostream>
#include <fstream>
#include <string>

using namespace std;

class figure {
    
protected:
    string name;
    
public:
    figure(const string& figName): name(figName){}
    
    void printInfo(){
        cout<< name <<" : " << endl;
        printSides();
        printAngles();
        cout<< endl;
        
    }
    
  virtual void printSides (){}
  virtual void printAngles(){}
    
};



class triangle : public figure {
    
protected:
    int a,b,c;
    int A,B,C;
    
public:
    triangle(const string& triangle_name, int sidea, int sideb, int sidec, int aA, int aB, int aC): figure(triangle_name), a(sidea), b(sideb), c(sidec), A(aA),B(aB),C(aC){}
    
    
    void printSides() override {
        cout << "Sides: a=" << a << " b=" << b << " c=" << c << endl;
    }
    
    void printAngles() override {
        cout << "Angles: A=" << A << " B=" << B << " C=" << C << endl;
        
        
    }
};
    
    
    class square : public figure {
        
    protected:
        int a,b,c,d;
        int A,B,C,D;
        
    public:
        square (const string& square_name, int sidea, int sideb, int sidec, int sided, int aA, int aB, int aC, int aD): figure (square_name), a(sidea), b(sideb), c(sidec), d(sided), A(aA), B(aB), C(aC), D(aD){}
        
        void printSides() override {
            cout << "Sides: a=" << a << " b=" << b << " c=" << c << ", d = "<< d<< endl;
        }
        
        void printAngles() override {
            cout << "Angles: A=" << A << " B=" << B << " C=" << C <<", D = " << D <<endl;
            
            
        }
};


    int main(){
        
        triangle Triangle1 ("Triangle", 20,20,20, 60,60,60 );
        square Romb ("Romb", 20,20,20,20,20,20,30,30);
        
        Triangle1.printInfo();
        Romb.printInfo();
        return 0;
        
        
    }








